package com.deloitte.im.controller;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import com.deloitte.im.model.Policy;
import com.deloitte.im.model.User;
import com.deloitte.im.service.UserService;

@ExtendWith(MockitoExtension.class)
class UserControllerTest {

	@Mock
	private UserService userService;

	@InjectMocks
	private UserController userController;


	@BeforeEach
	public void setUp() {
		MockitoAnnotations.initMocks(this);
	}

	@Test
	void testCreateUser() {

		User user = new User();
		Policy policy = new Policy();
		policy.setId("456fgh567vgbh");
		user.setFirstName("John");
		user.setLastName("Doe");
		user.setEmail("johndoe@example.com");
		user.setPhone("1234567890");
		user.setAddress("123 Main St, Anytown USA");
		List<Policy> policies = new ArrayList<>();
		policies.add(policy);
		user.setPolicies(policies);

		when(userService.createUser(any(User.class)))
				.thenReturn(ResponseEntity.status(HttpStatus.CREATED).body("User created successfully"));

		ResponseEntity<String> response = userController.createUser(user);

		assertEquals(HttpStatus.CREATED, response.getStatusCode());
	    assertEquals("User created successfully", response.getBody());
	    verify(userService, times(1)).createUser(user);
	}

	@Test
	void testGetAllUsers() {
		fail("Not yet implemented");
	}

	@Test
	void testGetUserById() {
		fail("Not yet implemented");
	}

	@Test
	void testUpdateUser() {
		fail("Not yet implemented");
	}

	@Test
	void testDeleteUser() {
		fail("Not yet implemented");
	}

	@Test
	void testAddPolicyToUser() {
		fail("Not yet implemented");
	}

}
