package com.deloitte.im.controller;

import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.deloitte.im.model.Policy;
import com.deloitte.im.repository.PolicyRepository;

import jakarta.servlet.http.HttpServletResponse;

@RestController
@RequestMapping("/insurance")
public class PolicyController {
	
	// inside Service layer ..?
	
	

	@Autowired
	private PolicyRepository policyRepository;
	
	@RequestMapping(value = "/")
	public void redirect(HttpServletResponse response) throws IOException{
		response.sendRedirect("/swagger-ui.html");
	}
	
	@PostMapping("/policy")
	public String createPolicy(@RequestBody Policy policy) {
		policyRepository.save(policy);
		return "Policy added with ID : " + policy.getId();
	}
	
	@GetMapping("/policies")
	  public List<Policy> getAllPolicies() {
	    return policyRepository.findAll();
	}
	
	@GetMapping("/policy/{id}")
	public Policy getPolicyById(@PathVariable String id) {
		return policyRepository.findById(id).orElse(null);
	}
	
	@DeleteMapping("/policy/{id}")
	public String deletePolicyById(@PathVariable String id) {
		policyRepository.deleteById(id);
		return "Insurance policy with id "+id+" deleted";
	}
	
	@PutMapping("/policy/{id}")
	public String updatePolicy(@PathVariable String id, @RequestBody Policy policy) {
		Policy policyById = policyRepository.findById(id).orElse(null);
		if(policyById == null) {
			return null;
		}
		policyById.setPolicyNumber(policy.getPolicyNumber());
		policyById.setPolicyType(policy.getPolicyType());
		policyById.setPremiumAmount(policy.getPremiumAmount());
		policyById.setStartDate(policy.getStartDate());
		policyById.setEndDate(policy.getEndDate());
		policyRepository.save(policyById);
		return "Insurance policy with id "+id+" updated";
	}
	

}
