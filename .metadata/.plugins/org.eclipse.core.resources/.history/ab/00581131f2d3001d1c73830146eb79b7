package com.deloitte.im.model;

import java.util.List;

import javax.validation.constraints.Email;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.DBRef;
import org.springframework.data.mongodb.core.mapping.Document;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@ApiModel(description = "User definition")
@Document(collection = "users")
public class User {

	@ApiModelProperty(notes = "Unique Id of user", hidden=true, position = 1)
	@Id
	private String id; 
	
	@ApiModelProperty(notes = "First name of the user", position = 2)
	@Pattern(regexp = "^[A-Za-z]*$",message = "Only alphabets are allowed!!")
	@Size(min=1, max=50, message="Firstname should be between 1-50 characters")
	@NotBlank(message = "First name cannot be empty")
	private String firstName;
	
	@ApiModelProperty(notes = "Last name of the user")
	@Pattern(regexp = "^[A-Za-z]*$",message = "Only alphabets are allowed!!")
	@Size(min=1, max=50, message="lastname should be between 1-50 characters")
	@NotBlank(message = "Last name cannot be empty")
	private String lastName;
	
	@ApiModelProperty(notes = "Email of the user")
	@NotNull(message = "Email Cannot be null") 
	@Email(message="Email not in format")
	private String email;
	
	@ApiModelProperty(notes = "Phone number of the user")
	@NotNull(message = "Phone number Cannot be null") 
	@Pattern(regexp = "^[0-9]*$", message = "Phone number should be numeric")
	@Size(min=10,max=10,message = "Phone number should have 10 characters") 
	private String phone;
	
	@ApiModelProperty(notes = "Address of the user")
	@NotEmpty(message = "Address Cannot be null")
	private String address;
	
	@DBRef
	@ApiModelProperty(notes = "List of policies of user")
	@NotNull(message = "A user should have atleast one policy")
	private List<Policy> policies;
	
	public void addPolicy(Policy policy) {
	    policies.add(policy);
	}

	
	
}

